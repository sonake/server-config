spring:
  rabbitmq:
    host: 192.168.220.128
    port: 5672
    username: guest
    password: guest

  autoconfigure:
    exclude: org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

zuul:
  routes:
    auth:
      path: /auth/**
      serviceId: hc-auth
      sensitiveHeaders: "*"
    system:
      path: /system/**
      serviceId: hc-server-system
      sensitiveHeaders: "*"
    test:
      path: /test/**
      serviceId: hc-server-test
      sensitiveHeaders: "*"
  retryable: true
  #Zuul配合Eureka后会有一套默认的配置规则，这里我们只想请求根据我们显示配置的路由规则走，所以设置为*，表示关闭所有默认路由配置规则；
  ignored-services: "*"
  #Zuul内部通过Ribbon按照一定的负载均衡算法来获取服务，Ribbon进行客户端负载均衡的Client并不是在服务启动的时候就初始化好的，而是在调用的时候
  #才会去创建相应的Client，所以第一次调用的耗时不仅仅包含发送HTTP请求的时间，还包含了创建RibbonClient的时间，这样一来如果创建时间速度较慢，同时设置的超时时间又比较短的话，第一次请求很容易出现超时的情况。设置为true的时候表示开启Ribbon的饥饿加载模式，即在应用启动的时候就去获取相应的Client备用。
  ribbon:
    eager-load:
      enabled: true
  host:
    connect-timeout-millis: 3000
    socket-timeout-millis: 3000
